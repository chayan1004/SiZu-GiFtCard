version: '3.8'

services:
  app:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - REPLIT_DOMAINS=${REPLIT_DOMAINS}
      - SQUARE_ACCESS_TOKEN=${SQUARE_ACCESS_TOKEN}
      - SQUARE_LOCATION_ID=${SQUARE_LOCATION_ID}
      - SQUARE_ENVIRONMENT=${SQUARE_ENVIRONMENT:-production}
      - MAILGUN_SMTP_HOST=${MAILGUN_SMTP_HOST}
      - MAILGUN_SMTP_PORT=${MAILGUN_SMTP_PORT:-587}
      - MAILGUN_SMTP_USER=${MAILGUN_SMTP_USER}
      - MAILGUN_SMTP_PASS=${MAILGUN_SMTP_PASS}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@sizu.com}
      - ENABLE_SQUARE=${ENABLE_SQUARE:-true}
      - ENABLE_EMAIL=${ENABLE_EMAIL:-true}
      - ENABLE_FRAUD_DETECTION=${ENABLE_FRAUD_DETECTION:-true}
      - ENABLE_ANALYTICS=${ENABLE_ANALYTICS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - BROWSERSLIST_IGNORE_OLD_DATA=true
    volumes:
      - receipts:/app/receipts
      - pdfs:/app/pdfs
      - logs:/app/logs
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sizu_giftcards}
      - POSTGRES_USER=${POSTGRES_USER:-sizu}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sizu} -d ${POSTGRES_DB:-sizu_giftcards}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  receipts:
  pdfs:
  logs: